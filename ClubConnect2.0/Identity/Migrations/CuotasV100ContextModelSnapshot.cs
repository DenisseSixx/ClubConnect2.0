// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using DataManagment.Models;

#nullable disable

namespace ClubConnect2._0.Identity.Migrations
{
    [DbContext(typeof(CuotasV100Context))]
    partial class CuotasV100ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Appautorizaciond", b =>
                {
                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<bool?>("CodAutorizacion")
                        .HasColumnType("bit")
                        .HasColumnName("COD_AUTORIZACION");

                    b.HasKey("CodTercero", "CodDependiente");

                    b.ToTable("APPAUTORIZACIOND", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Appautorizaciont", b =>
                {
                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<bool?>("CodAutorizacion")
                        .HasColumnType("bit")
                        .HasColumnName("COD_AUTORIZACION");

                    b.HasKey("CodTercero");

                    b.ToTable("APPAUTORIZACIONT", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Appusuario", b =>
                {
                    b.Property<string>("CodUsuario")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<string>("ClaUsuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CLA_USUARIO");

                    b.Property<decimal?>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<string>("CodEstusu")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTUSU");

                    b.Property<string>("CodTercero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<string>("NomUsuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NOM_USUARIO");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("CodUsuario");

                    b.ToTable("APPUSUARIO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Etipodocumento", b =>
                {
                    b.Property<int>("CodTipodocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("COD_TIPODOCUMENTO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTipodocumento"));

                    b.Property<string>("CodEmpresa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstusu")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTUSU");

                    b.Property<string>("NomTipodocumento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOM_TIPODOCUMENTO");

                    b.HasKey("CodTipodocumento");

                    b.HasIndex("CodEmpresa", "CodEstusu");

                    b.ToTable("ETIPODOCUMENTO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Expediente", b =>
                {
                    b.Property<int>("CodArchivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("COD_ARCHIVO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodArchivo"));

                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<int>("CodTipodocumento")
                        .HasColumnType("int")
                        .HasColumnName("COD_TIPODOCUMENTO");

                    b.Property<string>("CodEstusu")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTUSU");

                    b.Property<byte[]>("Documento")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("DOCUMENTO");

                    b.Property<string>("ExtDocumento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EXT_DOCUMENTO");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<string>("NomDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOM_DOCUMENTO");

                    b.HasKey("CodArchivo", "CodEmpresa", "CodCliente", "CodTercero", "CodDependiente", "CodTipodocumento");

                    b.HasIndex("CodTipodocumento");

                    b.HasIndex("CodEmpresa", "CodEstusu");

                    b.HasIndex("CodEmpresa", "CodCliente", "CodTercero", "CodDependiente");

                    b.ToTable("Expediente", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Expedientetercero", b =>
                {
                    b.Property<int>("CodArchivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("COD_ARCHIVO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodArchivo"));

                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<int>("CodTipodocumento")
                        .HasColumnType("int")
                        .HasColumnName("COD_TIPODOCUMENTO");

                    b.Property<string>("CodEstusu")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTUSU");

                    b.Property<byte[]>("Documento")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("DOCUMENTO");

                    b.Property<string>("ExtDocumento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EXT_DOCUMENTO");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<string>("NomDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOM_DOCUMENTO");

                    b.HasKey("CodArchivo", "CodEmpresa", "CodCliente", "CodTercero", "CodTipodocumento");

                    b.HasIndex("CodTipodocumento");

                    b.HasIndex("CodEmpresa", "CodEstusu");

                    b.HasIndex("CodEmpresa", "CodCliente", "CodTercero");

                    b.ToTable("Expedientetercero", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaBiometriaCopium", b =>
                {
                    b.Property<byte[]>("Biometria")
                        .IsRequired()
                        .HasColumnType("image")
                        .HasColumnName("BIOMETRIA");

                    b.Property<string>("CodCliente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<decimal>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<string>("CodEmpresa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTercero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.ToTable("SA_BIOMETRIA_COPIA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaBiometrium", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<string>("Biometria")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("BIOMETRIA");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodDependiente");

                    b.ToTable("SA_BIOMETRIA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaBitacoraGeneracion", b =>
                {
                    b.Property<DateTime?>("FecFin")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_FIN");

                    b.Property<DateTime?>("FecInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_INICIO");

                    b.Property<DateTime?>("FecModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_MODIFICACION");

                    b.Property<DateTime?>("FecRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REGISTRO");

                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("Periodo")
                        .HasColumnType("datetime")
                        .HasColumnName("PERIODO");

                    b.Property<string>("UsuModificacion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("USU_MODIFICACION");

                    b.Property<string>("Usuario")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("USUARIO");

                    b.ToTable("SA_BITACORA_GENERACION", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaBitacoraImporteTercero", b =>
                {
                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<decimal?>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.ToTable("SA_BITACORA_IMPORTE_TERCERO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCargosTransMembresium", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<decimal>("CodPlaMem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("COD_PLA_MEM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CodPlaMem"));

                    b.Property<string>("CodTipoMembresia")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MEMBRESIA");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MONTO");

                    b.Property<string>("TipoTransaccion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TIPO_TRANSACCION");

                    b.ToTable("SA_CARGOS_TRANS_MEMBRESIA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCliente", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodBusca")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_BUSCA");

                    b.Property<string>("CodCobro")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_COBRO");

                    b.Property<string>("CodDeshabilitarImp")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_DESHABILITAR_IMP");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodOperacion")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_OPERACION");

                    b.Property<string>("CodProducto")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_PRODUCTO");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EXTRA02");

                    b.Property<decimal>("LonExtra01")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("LON_EXTRA01");

                    b.Property<decimal>("LonExtra02")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("LON_EXTRA02");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MONTO");

                    b.Property<string>("NomCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOM_CLIENTE");

                    b.Property<string>("NumCuenta")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NUM_CUENTA");

                    b.Property<string>("Tercero01")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TERCERO01");

                    b.Property<string>("Tercero02")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TERCERO02");

                    b.HasKey("CodEmpresa", "CodCliente");

                    b.HasIndex("CodEmpresa", "CodCobro");

                    b.ToTable("SA_CLIENTE", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodAcceso", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodAcceso")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ACCESO");

                    b.Property<string>("DesAcceso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_ACCESO");

                    b.HasKey("CodEmpresa", "CodAcceso");

                    b.ToTable("SA_COD_ACCESO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodBanco", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<decimal>("CodBanco")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_BANCO");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("DesBanco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_BANCO");

                    b.HasKey("CodEmpresa", "CodBanco");

                    b.ToTable("SA_COD_BANCO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodBitacoraMembresium", b =>
                {
                    b.Property<decimal>("CodBitacoraMembresia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_BITACORA_MEMBRESIA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CodBitacoraMembresia"));

                    b.Property<string>("CodEmpresa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodSucursal")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUCURSAL");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal?>("CodTransaccionMembresia")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_TRANSACCION_MEMBRESIA");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<string>("Observacion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("OBSERVACION");

                    b.ToTable("SA_COD_BITACORA_MEMBRESIA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodCaja", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCaja")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CAJA");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("DesCaja")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_CAJA");

                    b.HasKey("CodEmpresa", "CodCaja")
                        .HasName("PK_SA_CAJA");

                    b.ToTable("SA_COD_CAJA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodCalculo", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTipo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO");

                    b.Property<string>("CodSubtipo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUBTIPO");

                    b.Property<string>("CodCalculo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_CALCULO");

                    b.Property<string>("CodEtiqueta")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ETIQUETA");

                    b.Property<string>("CodOrigen")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ORIGEN");

                    b.Property<string>("CodPeriodo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_PERIODO");

                    b.Property<string>("DesCalculo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_CALCULO");

                    b.HasKey("CodEmpresa", "CodTipo", "CodSubtipo", "CodCalculo");

                    b.ToTable("SA_COD_CALCULO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodCobro", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCobro")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_COBRO");

                    b.Property<string>("DesCobro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_COBRO");

                    b.HasKey("CodEmpresa", "CodCobro");

                    b.ToTable("SA_COD_COBRO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodEmpresa", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("Basser1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BASSER1");

                    b.Property<string>("Basser2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BASSER2");

                    b.Property<string>("Basser3")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BASSER3");

                    b.Property<string>("DesEmpresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_EMPRESA");

                    b.Property<string>("Nomser1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMSER1");

                    b.Property<string>("Nomser2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMSER2");

                    b.Property<string>("Nomser3")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMSER3");

                    b.Property<string>("Passer1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PASSER1");

                    b.Property<string>("Passer2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PASSER2");

                    b.Property<string>("Passer3")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PASSER3");

                    b.Property<string>("Ususer1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USUSER1");

                    b.Property<string>("Ususer2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USUSER2");

                    b.Property<string>("Ususer3")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USUSER3");

                    b.Property<string>("Versis")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("VERSIS");

                    b.HasKey("CodEmpresa");

                    b.ToTable("SA_COD_EMPRESA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodEstcer", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("DesEstado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_ESTADO");

                    b.ToTable("SA_COD_ESTCER", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodEstusu", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstusu")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTUSU");

                    b.Property<string>("DesEstusu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DES_ESTUSU");

                    b.HasKey("CodEmpresa", "CodEstusu");

                    b.ToTable("SA_COD_ESTUSU", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodExtra01", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<string>("Extra01")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<string>("Extra02")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EXTRA02");

                    b.HasKey("CodEmpresa", "CodCliente", "CodImporte", "Extra01");

                    b.ToTable("SA_COD_EXTRA01", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodGrupoPar", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_GRUPO");

                    b.Property<string>("DesGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_GRUPO");

                    b.HasKey("CodEmpresa", "CodGrupo");

                    b.ToTable("SA_COD_GRUPO_PAR", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodGrupoSer", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_GRUPO");

                    b.Property<string>("DesGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_GRUPO");

                    b.HasKey("CodEmpresa", "CodGrupo");

                    b.ToTable("SA_COD_GRUPO_SER", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodGrupoUsu", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_GRUPO");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("DesGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_GRUPO");

                    b.HasKey("CodEmpresa", "CodGrupo");

                    b.ToTable("SA_COD_GRUPO_USU", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodOpcion", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodOpcion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_OPCION");

                    b.Property<string>("DesOpcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_OPCION");

                    b.HasKey("CodEmpresa", "CodOpcion");

                    b.ToTable("SA_COD_OPCION", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodReg", b =>
                {
                    b.Property<string>("CodReg")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_REG");

                    b.Property<string>("CodEmpresa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodSucursal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUCURSAL");

                    b.Property<string>("DesReg")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DES_REG");

                    b.HasKey("CodReg");

                    b.ToTable("SA_COD_REG", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodRelacionMembresiaCompraMantenimiento", b =>
                {
                    b.Property<string>("CodEstado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<int>("CodRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("COD_RELACION");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodRelacion"));

                    b.Property<string>("CodTipoCompra")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_COMPRA");

                    b.Property<string>("CodTipoMantenimiento")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MANTENIMIENTO");

                    b.Property<string>("CodTipoMembresia")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MEMBRESIA");

                    b.ToTable("SA_COD_RELACION_MEMBRESIA_COMPRA_MANTENIMIENTO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodSubtipo", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTipo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO");

                    b.Property<string>("CodSubtipo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUBTIPO");

                    b.Property<string>("DesSubtipo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DES_SUBTIPO");

                    b.HasKey("CodEmpresa", "CodTipo", "CodSubtipo");

                    b.ToTable("SA_COD_SUBTIPO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodSucursal", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodSucursal")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUCURSAL");

                    b.Property<string>("DesSucursal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_SUCURSAL");

                    b.HasKey("CodEmpresa", "CodSucursal");

                    b.ToTable("SA_COD_SUCURSAL", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipo", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTipo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO");

                    b.Property<string>("DesTipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DES_TIPO");

                    b.HasKey("CodEmpresa", "CodTipo");

                    b.ToTable("SA_COD_TIPO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoCompra", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTipoCompra")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_COMPRA");

                    b.Property<string>("DesTipoCompra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_TIPO_COMPRA");

                    b.HasKey("CodEmpresa", "CodTipoCompra")
                        .HasName("PK_SA_COD_TIPO_COMRA");

                    b.ToTable("SA_COD_TIPO_COMPRA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoMantenimiento", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTipoMantenimiento")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MANTENIMIENTO");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("DesTipoMantenimiento")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DES_TIPO_MANTENIMIENTO");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MONTO");

                    b.HasKey("CodEmpresa", "CodTipoMantenimiento");

                    b.ToTable("SA_COD_TIPO_MANTENIMIENTO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoMembresium", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTipoMembresia")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MEMBRESIA");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("DesTipoMembresia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DES_TIPO_MEMBRESIA");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MONTO");

                    b.HasKey("CodEmpresa", "CodTipoMembresia");

                    b.ToTable("SA_COD_TIPO_MEMBRESIA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoTransaccion", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTipoTransaccion")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_TIPO_TRANSACCION");

                    b.Property<string>("DesTipoTransaccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_TIPO_TRANSACCION");

                    b.HasKey("CodEmpresa", "CodTipoTransaccion");

                    b.ToTable("SA_COD_TIPO_TRANSACCION", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTransMembresium", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<decimal>("CodTrans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("COD_TRANS");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CodTrans"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DESCRIPCION");

                    b.ToTable("SA_COD_TRANS_MEMBRESIA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTransaccion", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTransaccion")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TRANSACCION");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodTipoTransaccion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_TIPO_TRANSACCION");

                    b.Property<string>("DesTransaccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DES_TRANSACCION");

                    b.HasKey("CodEmpresa", "CodTransaccion");

                    b.HasIndex("CodEmpresa", "CodTipoTransaccion");

                    b.ToTable("SA_COD_TRANSACCION", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTransaccionBitacora", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<decimal>("CodTransaccionMembresia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_TRANSACCION_MEMBRESIA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CodTransaccionMembresia"));

                    b.Property<string>("DesTransaccionMembresia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_TRANSACCION_MEMBRESIA");

                    b.ToTable("SA_COD_TRANSACCION_BITACORA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTransaccionMembresium", b =>
                {
                    b.Property<decimal>("CodBitacoraMembresia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_BITACORA_MEMBRESIA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CodBitacoraMembresia"));

                    b.Property<string>("CodEmpresa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodSucursal")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUCURSAL");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal?>("CodTransaccionMembresia")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_TRANSACCION_MEMBRESIA");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<string>("Observacion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("OBSERVACION");

                    b.ToTable("SA_COD_TRANSACCION_MEMBRESIA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaConsumo", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<decimal>("CodConsumo")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_CONSUMO");

                    b.Property<string>("CodCaja")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CAJA");

                    b.Property<decimal?>("CodCajaDetalleVen")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_CAJA_DETALLE_VEN");

                    b.Property<decimal?>("CodCajaVen")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_CAJA_VEN");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<decimal?>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<decimal?>("CodVenta")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_VENTA");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<decimal?>("Folio")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("FOLIO");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MONTO");

                    b.Property<string>("Serie")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("SERIE");

                    b.HasKey("CodEmpresa", "CodConsumo");

                    b.ToTable("SA_CONSUMO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaDependiente", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<string>("CodCredencial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_CREDENCIAL");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<DateTime>("FecNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_NACIMIENTO");

                    b.Property<decimal?>("LimiteCredito")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("LIMITE_CREDITO");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOMBRE");

                    b.Property<decimal?>("SaldoCredito")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("SALDO_CREDITO");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodDependiente");

                    b.ToTable("SA_DEPENDIENTE", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaDesDocumentoDigitalizado", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<decimal>("CodTipoDocumento")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("COD_TIPO_DOCUMENTO");

                    b.Property<string>("DesTipoDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_TIPO_DOCUMENTO");

                    b.ToTable("SA_DES_DOCUMENTO_DIGITALIZADO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaDestinatario", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<decimal>("CodDestinatario")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_DESTINATARIO");

                    b.Property<string>("CorDestinatario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("COR_DESTINATARIO");

                    b.Property<string>("NomDestinatario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOM_DESTINATARIO");

                    b.HasKey("CodEmpresa", "CodCliente", "CodDestinatario");

                    b.ToTable("SA_DESTINATARIO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaDetallePagoMixto", b =>
                {
                    b.Property<decimal?>("Banco")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Cheque")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("CodMovimiento")
                        .HasColumnType("int");

                    b.Property<decimal?>("Deposito")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Efectivo")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdMixto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMixto"));

                    b.Property<decimal?>("MontoTotal")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Tarjeta")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("UsuarioActualizacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("SA_DETALLE_PAGO_MIXTO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaDocumento", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTipoDocumento")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_TIPO_DOCUMENTO");

                    b.Property<string>("CodSerie")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SERIE");

                    b.Property<decimal>("CodDocumento")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DOCUMENTO");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<decimal?>("CodMovimiento")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_MOVIMIENTO");

                    b.Property<string>("CodSistema")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SISTEMA");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<string>("CodTipoMovimiento")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MOVIMIENTO");

                    b.Property<DateTime?>("FecDocumento")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_DOCUMENTO");

                    b.Property<decimal?>("MonDocumento")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_DOCUMENTO");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("OBSERVACION");

                    b.HasKey("CodEmpresa", "CodTipoDocumento", "CodSerie", "CodDocumento");

                    b.ToTable("SA_DOCUMENTO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaDocumentoDigitalizado", b =>
                {
                    b.Property<decimal?>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<string>("CodEmpresa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodSucursal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUCURSAL");

                    b.Property<string>("CodTercero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodTipoDocumento")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("COD_TIPO_DOCUMENTO");

                    b.Property<string>("CodUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_REGISTRO");

                    b.Property<byte[]>("Frente")
                        .HasColumnType("image")
                        .HasColumnName("FRENTE");

                    b.Property<byte[]>("Reverso")
                        .HasColumnType("image")
                        .HasColumnName("REVERSO");

                    b.ToTable("SA_DOCUMENTO_DIGITALIZADO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaExcepcionesImporte", b =>
                {
                    b.Property<int>("CodExcepcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("COD_EXCEPCION");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodExcepcion"));

                    b.Property<string>("CodEstado")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodImporte")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<string>("CodTipo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO");

                    b.Property<DateTime?>("FecFin")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_FIN");

                    b.Property<DateTime?>("FecIni")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_INI");

                    b.Property<string>("Parametro")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("PARAMETRO");

                    b.HasKey("CodExcepcion")
                        .HasName("PK__SA_EXCEPCIONES_I__228D5B61");

                    b.ToTable("SA_EXCEPCIONES_IMPORTES", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaFotografium", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<byte[]>("Fotografia")
                        .IsRequired()
                        .HasColumnType("image")
                        .HasColumnName("FOTOGRAFIA");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodDependiente");

                    b.ToTable("SA_FOTOGRAFIA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporte", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<decimal?>("CodConcepto")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_CONCEPTO");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodSubtipo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUBTIPO");

                    b.Property<string>("CodTipo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO");

                    b.Property<string>("DesImporte")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_IMPORTE");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EXTRA02");

                    b.Property<DateTime>("FecFin")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_FIN");

                    b.Property<DateTime>("FecInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_INICIO");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO");

                    b.Property<decimal?>("PorIva")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("POR_IVA");

                    b.Property<string>("TipoCobro")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("TIPO_COBRO");

                    b.HasKey("CodEmpresa", "CodCliente", "CodImporte");

                    b.HasIndex("CodEmpresa", "CodTipo", "CodSubtipo");

                    b.ToTable("SA_IMPORTE", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporteArchivoTercero", b =>
                {
                    b.Property<decimal?>("Abono")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("ABONO");

                    b.Property<decimal?>("Bonificacion")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("BONIFICACION");

                    b.Property<decimal?>("Cargo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("CARGO");

                    b.Property<string>("CodCliente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodEmpresa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<int>("CodImporteArchivo")
                        .HasColumnType("int")
                        .HasColumnName("COD_IMPORTE_ARCHIVO");

                    b.Property<DateTime>("CodPeriodo")
                        .HasColumnType("datetime")
                        .HasColumnName("COD_PERIODO");

                    b.Property<string>("CodTercero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("DESCUENTO");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<DateTime>("FecArchivo")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_ARCHIVO");

                    b.Property<DateTime>("FecRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REGISTRO");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO");

                    b.Property<decimal?>("MontoOriginal")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO_ORIGINAL");

                    b.Property<decimal?>("NumPeriodo")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("NUM_PERIODO");

                    b.Property<string>("Razon")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("RAZON");

                    b.Property<decimal?>("Saldo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("SALDO");

                    b.Property<decimal?>("TotPeriodos")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("TOT_PERIODOS");

                    b.ToTable("SA_IMPORTE_ARCHIVO_TERCERO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporteBonificacion", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodImporte");

                    b.HasIndex("CodEmpresa", "CodCliente", "CodImporte");

                    b.ToTable("SA_IMPORTE_BONIFICACION", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaImportePredeterminadoImporte", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodDetalle")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_DETALLE");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("CANTIDAD");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<DateTime>("FecFin")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_FIN");

                    b.Property<DateTime>("FecInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_INICIO");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MONTO");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("TOTAL");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodDetalle", "CodImporte");

                    b.HasIndex("CodEmpresa", "CodCliente", "CodImporte");

                    b.ToTable("SA_IMPORTE_PREDETERMINADO_IMPORTE", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaImportePredeterminadoImportePrueba", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodDetalle")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_DETALLE");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("CANTIDAD");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<DateTime>("FecFin")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_FIN");

                    b.Property<DateTime>("FecInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_INICIO");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MONTO");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("TOTAL");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodDetalle", "CodImporte")
                        .HasName("PK_SA_IMPORTE_PREDETERMINADO_IMPORTE_pruebas");

                    b.ToTable("SA_IMPORTE_PREDETERMINADO_IMPORTE_PRUEBAS", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaImportePredeterminadoTercero", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodDetalle")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_DETALLE");

                    b.Property<decimal>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<DateTime>("FecFin")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_FIN");

                    b.Property<DateTime>("FecInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_INICIO");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodDetalle", "CodDependiente");

                    b.ToTable("SA_IMPORTE_PREDETERMINADO_TERCERO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaImportePredeterminadoTerceroPrueba", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("CodDetalle")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_DETALLE");

                    b.Property<decimal>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<DateTime>("FecFin")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_FIN");

                    b.Property<DateTime>("FecInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_INICIO");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodDetalle", "CodDependiente");

                    b.ToTable("SA_IMPORTE_PREDETERMINADO_TERCERO_PRUEBAS", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporteTercero", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<DateTime>("CodPeriodo")
                        .HasColumnType("datetime")
                        .HasColumnName("COD_PERIODO");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<decimal?>("Abono")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("ABONO");

                    b.Property<decimal?>("Bonificacion")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("BONIFICACION");

                    b.Property<decimal?>("Cargo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("CARGO");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("DESCUENTO");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<DateTime>("FecRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REGISTRO");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO");

                    b.Property<decimal?>("MontoOriginal")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO_ORIGINAL");

                    b.Property<decimal?>("NumPeriodo")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("NUM_PERIODO");

                    b.Property<decimal?>("Saldo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("SALDO");

                    b.Property<decimal?>("TotPeriodos")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("TOT_PERIODOS");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodPeriodo", "CodImporte")
                        .HasName("PK_SA_IMPORTE_TERCERO_1");

                    b.HasIndex("CodEmpresa", "CodCliente", "CodImporte");

                    b.ToTable("SA_IMPORTE_TERCERO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporteTerceroBitacora", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<DateTime>("CodPeriodo")
                        .HasColumnType("datetime")
                        .HasColumnName("COD_PERIODO");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<decimal?>("Abono")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("ABONO");

                    b.Property<decimal?>("Bonificacion")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("BONIFICACION");

                    b.Property<decimal?>("Cargo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("CARGO");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("DESCUENTO");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<DateTime>("FecRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REGISTRO");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO");

                    b.Property<decimal?>("MontoOriginal")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO_ORIGINAL");

                    b.Property<decimal?>("NumPeriodo")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("NUM_PERIODO");

                    b.Property<decimal?>("Saldo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("SALDO");

                    b.Property<decimal?>("TotPeriodos")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("TOT_PERIODOS");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodPeriodo", "CodImporte")
                        .HasName("PK_SA_IMPORTE_TERCERO_BITACORA1");

                    b.HasIndex("CodEmpresa", "CodCliente", "CodImporte");

                    b.ToTable("SA_IMPORTE_TERCERO_BITACORA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporteTerceroPrueba", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<DateTime>("CodPeriodo")
                        .HasColumnType("datetime")
                        .HasColumnName("COD_PERIODO");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<decimal?>("Abono")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("ABONO");

                    b.Property<decimal?>("Bonificacion")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("BONIFICACION");

                    b.Property<decimal?>("Cargo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("CARGO");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("DESCUENTO");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<DateTime>("FecRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REGISTRO");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO");

                    b.Property<decimal?>("MontoOriginal")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO_ORIGINAL");

                    b.Property<decimal?>("NumPeriodo")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("NUM_PERIODO");

                    b.Property<decimal?>("Saldo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("SALDO");

                    b.Property<decimal?>("TotPeriodos")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("TOT_PERIODOS");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero", "CodPeriodo", "CodImporte")
                        .HasName("PK_SA_IMPORTE_TERCERO_PRUEBAS_1");

                    b.ToTable("SA_IMPORTE_TERCERO_PRUEBAS", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaLugare", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<string>("Extra01")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.HasKey("CodEmpresa", "CodCliente", "CodImporte", "Extra01");

                    b.ToTable("SA_LUGARES", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaMovimientosDetum", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<decimal>("CodMovimiento")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_MOVIMIENTO");

                    b.Property<string>("CodTipo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO");

                    b.Property<decimal>("CodDetalle")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_DETALLE");

                    b.Property<decimal?>("AFavorAplicado")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("A_FAVOR_APLICADO");

                    b.Property<decimal?>("CobradoAplicado")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("COBRADO_APLICADO");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodFactura")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_FACTURA");

                    b.Property<decimal>("CodImporte")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_IMPORTE");

                    b.Property<DateTime?>("CodPeriodo")
                        .HasColumnType("datetime")
                        .HasColumnName("COD_PERIODO");

                    b.Property<string>("CodRecibo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_RECIBO");

                    b.Property<string>("CodReferencia")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("COD_REFERENCIA");

                    b.Property<string>("CodSubtipo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUBTIPO");

                    b.Property<string>("CodTipoTransaccion")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_TIPO_TRANSACCION");

                    b.Property<string>("CodTransaccion")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TRANSACCION");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<decimal?>("MonAdeudoAnterior")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MON_ADEUDO_ANTERIOR");

                    b.Property<decimal?>("MonAdeudoAnteriorSinRecargo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MON_ADEUDO_ANTERIOR_SIN_RECARGO");

                    b.Property<decimal?>("MonBonificacion")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MON_BONIFICACION");

                    b.Property<decimal?>("MonDescuento")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MON_DESCUENTO");

                    b.Property<decimal?>("MonIvaAdeudo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MON_IVA_ADEUDO");

                    b.Property<decimal?>("MonOriginal")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MON_ORIGINAL");

                    b.Property<decimal?>("MonSubtotalAdeudo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MON_SUBTOTAL_ADEUDO");

                    b.Property<decimal?>("MonTotalAdeudo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MON_TOTAL_ADEUDO");

                    b.Property<decimal?>("PorIva")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("POR_IVA");

                    b.Property<decimal?>("Recargo")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("RECARGO");

                    b.Property<decimal?>("TotPeriodos")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("TOT_PERIODOS");

                    b.HasKey("CodEmpresa", "CodMovimiento", "CodTipo", "CodDetalle");

                    b.ToTable("SA_MOVIMIENTOS_DETA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaMovimientosEnca", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<decimal>("CodMovimiento")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_MOVIMIENTO");

                    b.Property<string>("CobCargoTarjeta")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COB_CARGO_TARJETA");

                    b.Property<decimal?>("CodAnuMembresia")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_ANU_MEMBRESIA");

                    b.Property<decimal?>("CodAnuMembresiaAnt")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_ANU_MEMBRESIA_ANT");

                    b.Property<decimal?>("CodBanco")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_BANCO");

                    b.Property<string>("CodCliente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodComrobante")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_COMROBANTE");

                    b.Property<decimal?>("CodDocumento")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DOCUMENTO");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<decimal?>("CodFactura")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_FACTURA");

                    b.Property<string>("CodInstrumento")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_INSTRUMENTO");

                    b.Property<decimal?>("CodMenMembresia")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_MEN_MEMBRESIA");

                    b.Property<decimal?>("CodMenMembresiaAnt")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_MEN_MEMBRESIA_ANT");

                    b.Property<decimal?>("CodRecibo")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_RECIBO");

                    b.Property<string>("CodSerie")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SERIE");

                    b.Property<string>("CodSucursal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUCURSAL");

                    b.Property<string>("CodTercero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<string>("CodTipoDocumento")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_TIPO_DOCUMENTO");

                    b.Property<string>("CodTipoTransaccion")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_TIPO_TRANSACCION");

                    b.Property<string>("CodTransaccion")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TRANSACCION");

                    b.Property<string>("CodUsuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<string>("DesAnuMembresia")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("DES_ANU_MEMBRESIA");

                    b.Property<string>("DesMenMembresia")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("DES_MEN_MEMBRESIA");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<DateTime?>("FecFacturacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_FACTURACION");

                    b.Property<DateTime>("FecMovimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_MOVIMIENTO");

                    b.Property<DateTime?>("FecReal")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REAL");

                    b.Property<DateTime?>("FechaCancelacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_CANCELACION");

                    b.Property<decimal?>("MonAdeudoAnterior")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_ADEUDO_ANTERIOR");

                    b.Property<decimal?>("MonAplicar")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_APLICAR");

                    b.Property<decimal?>("MonBonificacion")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_BONIFICACION");

                    b.Property<decimal?>("MonCobrar")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_COBRAR");

                    b.Property<decimal?>("MonDescuento")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_DESCUENTO");

                    b.Property<decimal?>("MonDisponible")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_DISPONIBLE");

                    b.Property<decimal?>("MonIvaAdeudo")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_IVA_ADEUDO");

                    b.Property<decimal?>("MonIvaAplicado")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_IVA_APLICADO");

                    b.Property<decimal?>("MonSaldoFavor")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_SALDO_FAVOR");

                    b.Property<decimal?>("MonSaldoFavorAnterior")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_SALDO_FAVOR_ANTERIOR");

                    b.Property<decimal?>("MonSubtotalAdeudo")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_SUBTOTAL_ADEUDO");

                    b.Property<decimal?>("MonSubtotalAplicado")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_SUBTOTAL_APLICADO");

                    b.Property<decimal?>("MonTotalAdeudo")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_TOTAL_ADEUDO");

                    b.Property<decimal?>("MonTotalAplicado")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MON_TOTAL_APLICADO");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("OBSERVACION");

                    b.Property<string>("Referencia")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("REFERENCIA");

                    b.Property<string>("SerieFactura")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("SERIE_FACTURA");

                    b.Property<string>("SerieRecibo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("SERIE_RECIBO");

                    b.Property<decimal?>("TotalAbono")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("TOTAL_ABONO");

                    b.Property<string>("UsuarioCancelacion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("USUARIO_CANCELACION");

                    b.HasKey("CodEmpresa", "CodMovimiento");

                    b.HasIndex("CodEmpresa", "CodBanco");

                    b.HasIndex("CodEmpresa", "CodTransaccion");

                    b.HasIndex("CodEmpresa", "CodCliente", "CodTercero");

                    b.ToTable("SA_MOVIMIENTOS_ENCA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaParametro", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_GRUPO");

                    b.Property<string>("CodSubgrupo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUBGRUPO");

                    b.Property<string>("CodParametro")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_PARAMETRO");

                    b.Property<string>("DesParametro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DES_PARAMETRO");

                    b.Property<string>("ValParametro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("VAL_PARAMETRO");

                    b.HasKey("CodEmpresa", "CodGrupo", "CodSubgrupo", "CodParametro");

                    b.ToTable("SA_PARAMETRO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaParametrosDeAccion", b =>
                {
                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ACCION");

                    b.Property<string>("CodUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<string>("Commentario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("COMMENTARIO");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_MODIFICACION");

                    b.Property<string>("Parametro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PARAMETRO");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("VALOR");

                    b.ToTable("SA_PARAMETROS_DE_ACCION", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaPlazoPagoMembresium", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodEstado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<decimal?>("CodPerPag")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_PER_PAG");

                    b.Property<decimal>("CodPlaMem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("COD_PLA_MEM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CodPlaMem"));

                    b.Property<string>("CodTipoMembresia")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MEMBRESIA");

                    b.Property<decimal?>("Mensualidad")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MENSUALIDAD");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MONTO");

                    b.Property<string>("PeriodoPago")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PERIODO_PAGO");

                    b.Property<string>("TipoAdquisicion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TIPO_ADQUISICION");

                    b.ToTable("SA_PLAZO_PAGO_MEMBRESIA", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaSeguridad", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodOpcion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_OPCION");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_GRUPO");

                    b.Property<string>("CodAcceso")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ACCESO");

                    b.HasKey("CodEmpresa", "CodOpcion", "CodGrupo");

                    b.HasIndex("CodEmpresa", "CodAcceso");

                    b.HasIndex("CodEmpresa", "CodGrupo");

                    b.ToTable("SA_SEGURIDAD", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaSerie", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_GRUPO");

                    b.Property<string>("CodSubgrupo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUBGRUPO");

                    b.Property<string>("CodSerie")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_SERIE");

                    b.Property<string>("DesSerie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DES_SERIE");

                    b.Property<decimal>("NumSerie")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("NUM_SERIE");

                    b.HasKey("CodEmpresa", "CodGrupo", "CodSubgrupo", "CodSerie");

                    b.ToTable("SA_SERIE", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaTercero", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("AnticipoMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("ANTICIPO_MEMBRESIA");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CELULAR");

                    b.Property<decimal?>("CodAnuMembresia")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_ANU_MEMBRESIA");

                    b.Property<string>("CodCredencial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_CREDENCIAL");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodEstadoCertificado")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_ESTADO_CERTIFICADO");

                    b.Property<decimal?>("CodMenMembresia")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_MEN_MEMBRESIA");

                    b.Property<string>("CodTipoCompra")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_COMPRA");

                    b.Property<string>("CodTipoMantenimiento")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MANTENIMIENTO");

                    b.Property<string>("CodTipoMembresia")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MEMBRESIA");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<string>("ConsumoConAduedo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CONSUMO_CON_ADUEDO");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CORREO");

                    b.Property<string>("Cp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CP");

                    b.Property<string>("CpFiscal")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CP_FISCAL");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DOMICILIO");

                    b.Property<string>("DomicioFiscal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DOMICIO_FISCAL");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<string>("Extra03")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA03");

                    b.Property<string>("Extra04")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA04");

                    b.Property<DateTime>("FecNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_NACIMIENTO");

                    b.Property<DateTime>("FecRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REGISTRO");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_MODIFICACION");

                    b.Property<DateTime>("FinAnuMembresia")
                        .HasColumnType("datetime")
                        .HasColumnName("FIN_ANU_MEMBRESIA");

                    b.Property<DateTime>("FinMenMembresia")
                        .HasColumnType("datetime")
                        .HasColumnName("FIN_MEN_MEMBRESIA");

                    b.Property<DateTime>("InicioAnuMembresia")
                        .HasColumnType("datetime")
                        .HasColumnName("INICIO_ANU_MEMBRESIA");

                    b.Property<DateTime>("InicioMenMembresia")
                        .HasColumnType("datetime")
                        .HasColumnName("INICIO_MEN_MEMBRESIA");

                    b.Property<decimal?>("LimiteCredito")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("LIMITE_CREDITO");

                    b.Property<decimal?>("MenAdeudoPermitido")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("MEN_ADEUDO_PERMITIDO");

                    b.Property<string>("MesImporteAnual")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("MES_IMPORTE_ANUAL");

                    b.Property<decimal>("MontoAnuMembresia")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO_ANU_MEMBRESIA");

                    b.Property<decimal?>("MontoFavor")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MONTO_FAVOR");

                    b.Property<decimal>("MontoMenMembresia")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO_MEN_MEMBRESIA");

                    b.Property<string>("NomTercero")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOM_TERCERO");

                    b.Property<decimal>("NumeroAnuMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("NUMERO_ANU_MEMBRESIA");

                    b.Property<decimal>("NumeroMenMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("NUMERO_MEN_MEMBRESIA");

                    b.Property<string>("ObservacionModificacion")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("OBSERVACION_MODIFICACION");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("OBSERVACIONES");

                    b.Property<decimal>("OtrosAbonosMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("OTROS_ABONOS_MEMBRESIA");

                    b.Property<string>("Poblacion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("POBLACION");

                    b.Property<string>("PoblacionFiscal")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("POBLACION_FISCAL");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RAZON_SOCIAL");

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RFC");

                    b.Property<decimal?>("SaldoCredito")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("SALDO_CREDITO");

                    b.Property<decimal?>("SaldoMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("SALDO_MEMBRESIA");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TELEFONO");

                    b.Property<decimal>("TotalAnuMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("TOTAL_ANU_MEMBRESIA");

                    b.Property<decimal>("TotalMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("TOTAL_MEMBRESIA");

                    b.Property<decimal>("TotalMenMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("TOTAL_MEN_MEMBRESIA");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero");

                    b.HasIndex("CodEmpresa", "CodTipoCompra");

                    b.HasIndex("CodEmpresa", "CodTipoMantenimiento");

                    b.HasIndex("CodEmpresa", "CodTipoMembresia");

                    b.ToTable("SA_TERCERO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaTerceroArchivo", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodCliente")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<string>("CodTercero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<decimal>("AnticipoMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("ANTICIPO_MEMBRESIA");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CELULAR");

                    b.Property<decimal?>("CodAnuMembresia")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_ANU_MEMBRESIA");

                    b.Property<string>("CodCredencial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_CREDENCIAL");

                    b.Property<string>("CodEstado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTADO");

                    b.Property<string>("CodEstadoCertificado")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_ESTADO_CERTIFICADO");

                    b.Property<decimal?>("CodMenMembresia")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("COD_MEN_MEMBRESIA");

                    b.Property<string>("CodTipoCompra")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_COMPRA");

                    b.Property<string>("CodTipoMantenimiento")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MANTENIMIENTO");

                    b.Property<string>("CodTipoMembresia")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_TIPO_MEMBRESIA");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<string>("ConsumoConAduedo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CONSUMO_CON_ADUEDO");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CORREO");

                    b.Property<string>("Cp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CP");

                    b.Property<string>("CpFiscal")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CP_FISCAL");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DOMICILIO");

                    b.Property<string>("DomicioFiscal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DOMICIO_FISCAL");

                    b.Property<string>("Extra01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA01");

                    b.Property<string>("Extra02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA02");

                    b.Property<string>("Extra03")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA03");

                    b.Property<string>("Extra04")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EXTRA04");

                    b.Property<DateTime>("FecNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_NACIMIENTO");

                    b.Property<DateTime>("FecRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REGISTRO");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_MODIFICACION");

                    b.Property<DateTime>("FinAnuMembresia")
                        .HasColumnType("datetime")
                        .HasColumnName("FIN_ANU_MEMBRESIA");

                    b.Property<DateTime>("FinMenMembresia")
                        .HasColumnType("datetime")
                        .HasColumnName("FIN_MEN_MEMBRESIA");

                    b.Property<DateTime>("InicioAnuMembresia")
                        .HasColumnType("datetime")
                        .HasColumnName("INICIO_ANU_MEMBRESIA");

                    b.Property<DateTime>("InicioMenMembresia")
                        .HasColumnType("datetime")
                        .HasColumnName("INICIO_MEN_MEMBRESIA");

                    b.Property<decimal?>("LimiteCredito")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("LIMITE_CREDITO");

                    b.Property<decimal?>("MenAdeudoPermitido")
                        .HasColumnType("numeric(5, 0)")
                        .HasColumnName("MEN_ADEUDO_PERMITIDO");

                    b.Property<string>("MesImporteAnual")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("MES_IMPORTE_ANUAL");

                    b.Property<decimal>("MontoAnuMembresia")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO_ANU_MEMBRESIA");

                    b.Property<decimal?>("MontoFavor")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("MONTO_FAVOR");

                    b.Property<decimal>("MontoMenMembresia")
                        .HasColumnType("numeric(18, 4)")
                        .HasColumnName("MONTO_MEN_MEMBRESIA");

                    b.Property<string>("NomTercero")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOM_TERCERO");

                    b.Property<decimal>("NumeroAnuMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("NUMERO_ANU_MEMBRESIA");

                    b.Property<decimal>("NumeroMenMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("NUMERO_MEN_MEMBRESIA");

                    b.Property<string>("ObservacionModificacion")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("OBSERVACION_MODIFICACION");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("OBSERVACIONES");

                    b.Property<decimal>("OtrosAbonosMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("OTROS_ABONOS_MEMBRESIA");

                    b.Property<string>("Poblacion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("POBLACION");

                    b.Property<string>("PoblacionFiscal")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("POBLACION_FISCAL");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RAZON_SOCIAL");

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RFC");

                    b.Property<decimal?>("SaldoCredito")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("SALDO_CREDITO");

                    b.Property<decimal?>("SaldoMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("SALDO_MEMBRESIA");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TELEFONO");

                    b.Property<decimal>("TotalAnuMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("TOTAL_ANU_MEMBRESIA");

                    b.Property<decimal>("TotalMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("TOTAL_MEMBRESIA");

                    b.Property<decimal>("TotalMenMembresia")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("TOTAL_MEN_MEMBRESIA");

                    b.HasKey("CodEmpresa", "CodCliente", "CodTercero");

                    b.ToTable("SA_TERCERO_ARCHIVO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaUsuario", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_USUARIO");

                    b.Property<string>("ClaUsuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CLA_USUARIO");

                    b.Property<string>("CodCaja")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CAJA");

                    b.Property<string>("CodEstusu")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ESTUSU");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_GRUPO");

                    b.Property<string>("CodSucursal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_SUCURSAL");

                    b.Property<string>("DesUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DES_USUARIO");

                    b.Property<string>("NomUsuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NOM_USUARIO");

                    b.HasKey("CodEmpresa", "CodUsuario");

                    b.HasIndex("CodEmpresa", "CodEstusu");

                    b.HasIndex("CodEmpresa", "CodGrupo");

                    b.HasIndex("CodEmpresa", "CodSucursal");

                    b.ToTable("SA_USUARIO", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaVerificarTer", b =>
                {
                    b.Property<string>("CodEmpresa")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.ToTable("SA_VERIFICAR_TER", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.SaVisitum", b =>
                {
                    b.Property<string>("CodAcceso")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("COD_ACCESO");

                    b.Property<string>("CodCliente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("COD_CLIENTE");

                    b.Property<decimal?>("CodDependiente")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("COD_DEPENDIENTE");

                    b.Property<string>("CodEmpresa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("CodTercero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_TERCERO");

                    b.Property<DateTime?>("FecVisita")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_VISITA");

                    b.ToTable("SA_VISITA", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Etipodocumento", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEstusu", "SaCodEstusu")
                        .WithMany("Etipodocumentos")
                        .HasForeignKey("CodEmpresa", "CodEstusu")
                        .HasConstraintName("FK_ETIPODOCUMENTO_SA_COD_ESTUSU");

                    b.Navigation("SaCodEstusu");
                });

            modelBuilder.Entity("WebApplication1.Models.Expediente", b =>
                {
                    b.HasOne("WebApplication1.Models.Etipodocumento", "CodTipodocumentoNavigation")
                        .WithMany("Expedientes")
                        .HasForeignKey("CodTipodocumento")
                        .IsRequired()
                        .HasConstraintName("FK_Expediente_ETipoDocumento");

                    b.HasOne("WebApplication1.Models.SaCodEstusu", "SaCodEstusu")
                        .WithMany("Expedientes")
                        .HasForeignKey("CodEmpresa", "CodEstusu")
                        .IsRequired()
                        .HasConstraintName("FK_Expediente_SA_COD_ESTUSU");

                    b.HasOne("WebApplication1.Models.SaDependiente", "SaDependiente")
                        .WithMany("Expedientes")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero", "CodDependiente")
                        .IsRequired()
                        .HasConstraintName("FK_Expediente_SA_DEPENDIENTE");

                    b.Navigation("CodTipodocumentoNavigation");

                    b.Navigation("SaCodEstusu");

                    b.Navigation("SaDependiente");
                });

            modelBuilder.Entity("WebApplication1.Models.Expedientetercero", b =>
                {
                    b.HasOne("WebApplication1.Models.Etipodocumento", "CodTipodocumentoNavigation")
                        .WithMany("Expedienteterceros")
                        .HasForeignKey("CodTipodocumento")
                        .IsRequired()
                        .HasConstraintName("FK_Expedientetercero_ETIPODOCUMENTO");

                    b.HasOne("WebApplication1.Models.SaCodEstusu", "SaCodEstusu")
                        .WithMany("Expedienteterceros")
                        .HasForeignKey("CodEmpresa", "CodEstusu")
                        .IsRequired()
                        .HasConstraintName("FK_Expedientetercero_SA_COD_ESTUSU");

                    b.HasOne("WebApplication1.Models.SaTercero", "SaTercero")
                        .WithMany("Expedienteterceros")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero")
                        .IsRequired()
                        .HasConstraintName("FK_Expedientetercero_SA_TERCERO");

                    b.Navigation("CodTipodocumentoNavigation");

                    b.Navigation("SaCodEstusu");

                    b.Navigation("SaTercero");
                });

            modelBuilder.Entity("WebApplication1.Models.SaBiometrium", b =>
                {
                    b.HasOne("WebApplication1.Models.SaTercero", "SaTercero")
                        .WithMany("SaBiometria")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero")
                        .IsRequired()
                        .HasConstraintName("FK_SA_BIOMETRIA_SA_TERCERO");

                    b.Navigation("SaTercero");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCliente", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaClientes")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_CLIENTE_SA_COD_EMPRESA");

                    b.HasOne("WebApplication1.Models.SaCodCobro", "SaCodCobro")
                        .WithMany("SaClientes")
                        .HasForeignKey("CodEmpresa", "CodCobro")
                        .IsRequired()
                        .HasConstraintName("FK_SA_CLIENTE_SA_COD_COBRO");

                    b.Navigation("CodEmpresaNavigation");

                    b.Navigation("SaCodCobro");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodBanco", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodBancos")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_BANCO_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodCalculo", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodCalculos")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_CALCULO_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodCobro", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodCobros")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_COBRO_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodEstusu", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodEstusus")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_ESTUSU_SA_COD_EMPRESA1");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodExtra01", b =>
                {
                    b.HasOne("WebApplication1.Models.SaImporte", "SaImporte")
                        .WithMany("SaCodExtra01s")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodImporte")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_EXTRA01_SA_IMPORTE");

                    b.Navigation("SaImporte");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodGrupoPar", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodGrupoPars")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_GRUPO_PAR_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodGrupoSer", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodGrupoSers")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_GRUPO_SER_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodGrupoUsu", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodGrupoUsus")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_GRUPO_USU_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodOpcion", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodOpcions")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_OPCION_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodSubtipo", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodTipo", "SaCodTipo")
                        .WithMany("SaCodSubtipos")
                        .HasForeignKey("CodEmpresa", "CodTipo")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_SUBTIPO_SA_COD_TIPO");

                    b.Navigation("SaCodTipo");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodSucursal", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodSucursals")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_SUCURSAL_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipo", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodTipos")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_TIPO_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoCompra", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodTipoCompras")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_TIPO_COMPRA_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoMantenimiento", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodTipoMantenimientos")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_TIPO_MANTENIMIENTO_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoMembresium", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodTipoMembresia")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_TIPO_MEMBRESIA_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoTransaccion", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaCodTipoTransaccions")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_TIPO_TRANSACCION_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTransaccion", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodTipoTransaccion", "SaCodTipoTransaccion")
                        .WithMany("SaCodTransaccions")
                        .HasForeignKey("CodEmpresa", "CodTipoTransaccion")
                        .IsRequired()
                        .HasConstraintName("FK_SA_COD_TRANSACCION_SA_COD_EMPRESA1");

                    b.Navigation("SaCodTipoTransaccion");
                });

            modelBuilder.Entity("WebApplication1.Models.SaDependiente", b =>
                {
                    b.HasOne("WebApplication1.Models.SaTercero", "SaTercero")
                        .WithMany("SaDependientes")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero")
                        .IsRequired()
                        .HasConstraintName("FK_SA_DEPENDIENTE_SA_TERCERO");

                    b.Navigation("SaTercero");
                });

            modelBuilder.Entity("WebApplication1.Models.SaDestinatario", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCliente", "SaCliente")
                        .WithMany("SaDestinatarios")
                        .HasForeignKey("CodEmpresa", "CodCliente")
                        .IsRequired()
                        .HasConstraintName("FK_SA_DESTINATARIO_SA_CLIENTE");

                    b.Navigation("SaCliente");
                });

            modelBuilder.Entity("WebApplication1.Models.SaDocumento", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaDocumentos")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_DOCUMENTO_SA_COD_EMPRESA");

                    b.Navigation("CodEmpresaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SaFotografium", b =>
                {
                    b.HasOne("WebApplication1.Models.SaTercero", "SaTercero")
                        .WithMany("SaFotografia")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero")
                        .IsRequired()
                        .HasConstraintName("FK_SA_FOTOGRAFIA_SA_TERCERO");

                    b.Navigation("SaTercero");
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporte", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCliente", "SaCliente")
                        .WithMany("SaImportes")
                        .HasForeignKey("CodEmpresa", "CodCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_SA_CLIENTE");

                    b.HasOne("WebApplication1.Models.SaCodSubtipo", "SaCodSubtipo")
                        .WithMany("SaImportes")
                        .HasForeignKey("CodEmpresa", "CodTipo", "CodSubtipo")
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_SA_COD_SUBTIPO");

                    b.Navigation("SaCliente");

                    b.Navigation("SaCodSubtipo");
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporteBonificacion", b =>
                {
                    b.HasOne("WebApplication1.Models.SaImporte", "SaImporte")
                        .WithMany("SaImporteBonificacions")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodImporte")
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_BONIFICACION_SA_IMPORTE");

                    b.HasOne("WebApplication1.Models.SaTercero", "SaTercero")
                        .WithMany("SaImporteBonificacions")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero")
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_BONIFICACION_SA_TERCERO");

                    b.Navigation("SaImporte");

                    b.Navigation("SaTercero");
                });

            modelBuilder.Entity("WebApplication1.Models.SaImportePredeterminadoImporte", b =>
                {
                    b.HasOne("WebApplication1.Models.SaImporte", "SaImporte")
                        .WithMany("SaImportePredeterminadoImportes")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodImporte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_PREDETERMINADO_IMPORTE_SA_IMPORTE");

                    b.HasOne("WebApplication1.Models.SaTercero", "SaTercero")
                        .WithMany("SaImportePredeterminadoImportes")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero")
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_PREDETERMINADO_IMPORTE_SA_TERCERO");

                    b.Navigation("SaImporte");

                    b.Navigation("SaTercero");
                });

            modelBuilder.Entity("WebApplication1.Models.SaImportePredeterminadoTercero", b =>
                {
                    b.HasOne("WebApplication1.Models.SaTercero", "SaTercero")
                        .WithMany("SaImportePredeterminadoTerceros")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero")
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_PREDETERMINADO_TERCERO_SA_TERCERO1");

                    b.Navigation("SaTercero");
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporteTercero", b =>
                {
                    b.HasOne("WebApplication1.Models.SaImporte", "SaImporte")
                        .WithMany("SaImporteTerceros")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodImporte")
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_TERCERO_SA_IMPORTE1");

                    b.HasOne("WebApplication1.Models.SaTercero", "SaTercero")
                        .WithMany("SaImporteTerceros")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero")
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_TERCERO_SA_TERCERO2");

                    b.Navigation("SaImporte");

                    b.Navigation("SaTercero");
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporteTerceroBitacora", b =>
                {
                    b.HasOne("WebApplication1.Models.SaImporte", "SaImporte")
                        .WithMany("SaImporteTerceroBitacoras")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodImporte")
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_TERCERO_BITACORA_SA_IMPORTE1");

                    b.HasOne("WebApplication1.Models.SaTercero", "SaTercero")
                        .WithMany("SaImporteTerceroBitacoras")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero")
                        .IsRequired()
                        .HasConstraintName("FK_SA_IMPORTE_TERCERO_BITACORA_SA_TERCERO2");

                    b.Navigation("SaImporte");

                    b.Navigation("SaTercero");
                });

            modelBuilder.Entity("WebApplication1.Models.SaLugare", b =>
                {
                    b.HasOne("WebApplication1.Models.SaImporte", "SaImporte")
                        .WithMany("SaLugares")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodImporte")
                        .IsRequired()
                        .HasConstraintName("FK_SA_LUGARES_SA_IMPORTE1");

                    b.Navigation("SaImporte");
                });

            modelBuilder.Entity("WebApplication1.Models.SaMovimientosEnca", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodBanco", "SaCodBanco")
                        .WithMany("SaMovimientosEncas")
                        .HasForeignKey("CodEmpresa", "CodBanco")
                        .HasConstraintName("FK_SA_MOVIMIENTOS_ENCA_SA_COD_BANCO");

                    b.HasOne("WebApplication1.Models.SaCodTransaccion", "SaCodTransaccion")
                        .WithMany("SaMovimientosEncas")
                        .HasForeignKey("CodEmpresa", "CodTransaccion")
                        .HasConstraintName("FK_SA_MOVIMIENTOS_ENCA_SA_COD_TRANSACCION");

                    b.HasOne("WebApplication1.Models.SaTercero", "SaTercero")
                        .WithMany("SaMovimientosEncas")
                        .HasForeignKey("CodEmpresa", "CodCliente", "CodTercero")
                        .IsRequired()
                        .HasConstraintName("FK_SA_MOVIMIENTOS_ENCA_SA_TERCERO");

                    b.Navigation("SaCodBanco");

                    b.Navigation("SaCodTransaccion");

                    b.Navigation("SaTercero");
                });

            modelBuilder.Entity("WebApplication1.Models.SaParametro", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodGrupoPar", "SaCodGrupoPar")
                        .WithMany("SaParametros")
                        .HasForeignKey("CodEmpresa", "CodGrupo")
                        .IsRequired()
                        .HasConstraintName("FK_SA_PARAMETRO_SA_COD_GRUPO_PAR");

                    b.Navigation("SaCodGrupoPar");
                });

            modelBuilder.Entity("WebApplication1.Models.SaSeguridad", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodAcceso", "SaCodAcceso")
                        .WithMany("SaSeguridads")
                        .HasForeignKey("CodEmpresa", "CodAcceso")
                        .IsRequired()
                        .HasConstraintName("FK_SA_SEGURIDAD_SA_COD_ACCESO");

                    b.HasOne("WebApplication1.Models.SaCodGrupoUsu", "SaCodGrupoUsu")
                        .WithMany("SaSeguridads")
                        .HasForeignKey("CodEmpresa", "CodGrupo")
                        .IsRequired()
                        .HasConstraintName("FK_SA_SEGURIDAD_SA_COD_GRUPO_USU");

                    b.HasOne("WebApplication1.Models.SaCodOpcion", "SaCodOpcion")
                        .WithMany("SaSeguridads")
                        .HasForeignKey("CodEmpresa", "CodOpcion")
                        .IsRequired()
                        .HasConstraintName("FK_SA_SEGURIDAD_SA_COD_OPCION");

                    b.Navigation("SaCodAcceso");

                    b.Navigation("SaCodGrupoUsu");

                    b.Navigation("SaCodOpcion");
                });

            modelBuilder.Entity("WebApplication1.Models.SaSerie", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodGrupoSer", "SaCodGrupoSer")
                        .WithMany("SaSeries")
                        .HasForeignKey("CodEmpresa", "CodGrupo")
                        .IsRequired()
                        .HasConstraintName("FK_SA_SERIE_SA_COD_GRUPO_SER");

                    b.Navigation("SaCodGrupoSer");
                });

            modelBuilder.Entity("WebApplication1.Models.SaTercero", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaTerceros")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_TERCERO_SA_COD_EMPRESA");

                    b.HasOne("WebApplication1.Models.SaCliente", "SaCliente")
                        .WithMany("SaTerceros")
                        .HasForeignKey("CodEmpresa", "CodCliente")
                        .IsRequired()
                        .HasConstraintName("FK_SA_TERCERO_SA_CLIENTE");

                    b.HasOne("WebApplication1.Models.SaCodTipoCompra", "SaCodTipoCompra")
                        .WithMany("SaTerceros")
                        .HasForeignKey("CodEmpresa", "CodTipoCompra")
                        .IsRequired()
                        .HasConstraintName("FK_SA_TERCERO_SA_COD_TIPO_COMPRA");

                    b.HasOne("WebApplication1.Models.SaCodTipoMantenimiento", "SaCodTipoMantenimiento")
                        .WithMany("SaTerceros")
                        .HasForeignKey("CodEmpresa", "CodTipoMantenimiento")
                        .IsRequired()
                        .HasConstraintName("FK_SA_TERCERO_SA_COD_TIPO_MANTENIMIENTO");

                    b.HasOne("WebApplication1.Models.SaCodTipoMembresium", "SaCodTipoMembresium")
                        .WithMany("SaTerceros")
                        .HasForeignKey("CodEmpresa", "CodTipoMembresia")
                        .IsRequired()
                        .HasConstraintName("FK_SA_TERCERO_SA_COD_TIPO_MEMBRESIA");

                    b.Navigation("CodEmpresaNavigation");

                    b.Navigation("SaCliente");

                    b.Navigation("SaCodTipoCompra");

                    b.Navigation("SaCodTipoMantenimiento");

                    b.Navigation("SaCodTipoMembresium");
                });

            modelBuilder.Entity("WebApplication1.Models.SaUsuario", b =>
                {
                    b.HasOne("WebApplication1.Models.SaCodEmpresa", "CodEmpresaNavigation")
                        .WithMany("SaUsuarios")
                        .HasForeignKey("CodEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_SA_USUARIO_SA_COD_EMPRESA");

                    b.HasOne("WebApplication1.Models.SaCodEstusu", "SaCodEstusu")
                        .WithMany("SaUsuarios")
                        .HasForeignKey("CodEmpresa", "CodEstusu")
                        .IsRequired()
                        .HasConstraintName("FK_SA_USUARIO_SA_COD_ESTUSU");

                    b.HasOne("WebApplication1.Models.SaCodGrupoUsu", "SaCodGrupoUsu")
                        .WithMany("SaUsuarios")
                        .HasForeignKey("CodEmpresa", "CodGrupo")
                        .IsRequired()
                        .HasConstraintName("FK_SA_USUARIO_SA_COD_GRUPO_USU");

                    b.HasOne("WebApplication1.Models.SaCodSucursal", "SaCodSucursal")
                        .WithMany("SaUsuarios")
                        .HasForeignKey("CodEmpresa", "CodSucursal")
                        .IsRequired()
                        .HasConstraintName("FK_SA_USUARIO_SA_COD_SUCURSAL");

                    b.Navigation("CodEmpresaNavigation");

                    b.Navigation("SaCodEstusu");

                    b.Navigation("SaCodGrupoUsu");

                    b.Navigation("SaCodSucursal");
                });

            modelBuilder.Entity("WebApplication1.Models.Etipodocumento", b =>
                {
                    b.Navigation("Expedientes");

                    b.Navigation("Expedienteterceros");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCliente", b =>
                {
                    b.Navigation("SaDestinatarios");

                    b.Navigation("SaImportes");

                    b.Navigation("SaTerceros");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodAcceso", b =>
                {
                    b.Navigation("SaSeguridads");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodBanco", b =>
                {
                    b.Navigation("SaMovimientosEncas");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodCobro", b =>
                {
                    b.Navigation("SaClientes");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodEmpresa", b =>
                {
                    b.Navigation("SaClientes");

                    b.Navigation("SaCodBancos");

                    b.Navigation("SaCodCalculos");

                    b.Navigation("SaCodCobros");

                    b.Navigation("SaCodEstusus");

                    b.Navigation("SaCodGrupoPars");

                    b.Navigation("SaCodGrupoSers");

                    b.Navigation("SaCodGrupoUsus");

                    b.Navigation("SaCodOpcions");

                    b.Navigation("SaCodSucursals");

                    b.Navigation("SaCodTipoCompras");

                    b.Navigation("SaCodTipoMantenimientos");

                    b.Navigation("SaCodTipoMembresia");

                    b.Navigation("SaCodTipoTransaccions");

                    b.Navigation("SaCodTipos");

                    b.Navigation("SaDocumentos");

                    b.Navigation("SaTerceros");

                    b.Navigation("SaUsuarios");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodEstusu", b =>
                {
                    b.Navigation("Etipodocumentos");

                    b.Navigation("Expedientes");

                    b.Navigation("Expedienteterceros");

                    b.Navigation("SaUsuarios");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodGrupoPar", b =>
                {
                    b.Navigation("SaParametros");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodGrupoSer", b =>
                {
                    b.Navigation("SaSeries");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodGrupoUsu", b =>
                {
                    b.Navigation("SaSeguridads");

                    b.Navigation("SaUsuarios");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodOpcion", b =>
                {
                    b.Navigation("SaSeguridads");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodSubtipo", b =>
                {
                    b.Navigation("SaImportes");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodSucursal", b =>
                {
                    b.Navigation("SaUsuarios");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipo", b =>
                {
                    b.Navigation("SaCodSubtipos");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoCompra", b =>
                {
                    b.Navigation("SaTerceros");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoMantenimiento", b =>
                {
                    b.Navigation("SaTerceros");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoMembresium", b =>
                {
                    b.Navigation("SaTerceros");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTipoTransaccion", b =>
                {
                    b.Navigation("SaCodTransaccions");
                });

            modelBuilder.Entity("WebApplication1.Models.SaCodTransaccion", b =>
                {
                    b.Navigation("SaMovimientosEncas");
                });

            modelBuilder.Entity("WebApplication1.Models.SaDependiente", b =>
                {
                    b.Navigation("Expedientes");
                });

            modelBuilder.Entity("WebApplication1.Models.SaImporte", b =>
                {
                    b.Navigation("SaCodExtra01s");

                    b.Navigation("SaImporteBonificacions");

                    b.Navigation("SaImportePredeterminadoImportes");

                    b.Navigation("SaImporteTerceroBitacoras");

                    b.Navigation("SaImporteTerceros");

                    b.Navigation("SaLugares");
                });

            modelBuilder.Entity("WebApplication1.Models.SaTercero", b =>
                {
                    b.Navigation("Expedienteterceros");

                    b.Navigation("SaBiometria");

                    b.Navigation("SaDependientes");

                    b.Navigation("SaFotografia");

                    b.Navigation("SaImporteBonificacions");

                    b.Navigation("SaImportePredeterminadoImportes");

                    b.Navigation("SaImportePredeterminadoTerceros");

                    b.Navigation("SaImporteTerceroBitacoras");

                    b.Navigation("SaImporteTerceros");

                    b.Navigation("SaMovimientosEncas");
                });
#pragma warning restore 612, 618
        }
    }
}
